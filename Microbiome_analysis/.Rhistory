g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
g <- g + facet_wrap(~clade_name)
g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
g <- g + facet_wrap(~clade_name)
g <- g + facet_grid(scales = "free")
g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
g <- g + facet_grid(scales = "free")
g <- g + facet_wrap(~clade_name)
g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
g <- g + facet_grid(scales = "free")
#g <- g + facet_wrap(~clade_name)
g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
g <- g + facet_grid(~clade_name,scales = "free")
#g <- g + facet_wrap(~clade_name)
g <- g + ggtitle('Phylum level')
g
?facet_grid
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
#g <- g + ?facet_grid(~clade_name,scales = "free")
g <- g + facet_wrap(~clade_name)
g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
g <- g + ?facet_grid(~clade_name,scales = "free_y")
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
g <- g + facet_grid(~clade_name,scales = "free_y")
#g <- g + facet_wrap(~clade_name)
g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
#g <- g + facet_grid(~clade_name,scales = "free_y")
g <- g + facet_wrap(~clade_name)
g <- g + ggtitle('Phylum level')
g
g <- ggplot(data=data,aes(x=group,y=value,fill=clade_name))
g <- g + geom_boxplot()
#g <- g + facet_grid(~clade_name,scales = "free_y")
g <- g + facet_wrap(~clade_name,scales = 'free')
g <- g + ggtitle('Phylum level')
g
data <- read.csv('phylum_abd.csv')
data <- melt(data)                            # use the help function to understand what melt does
data$group <- substr(data$variable, 0, 1)
# Example code to plot barplots of all samples
toPlot <- data[order(data$group),]
toPlot$variable <- factor(toPlot$variable,
levels = unique(toPlot$variable))
g <- ggplot(data=toPlot,aes(x=variable,y=value,fill=clade_name))
g <- g + geom_bar(stat="identity")
g <- g + theme(axis.text.x = element_text(angle = 90,size = 4))
g
data <- read.csv('species_abd.csv')
data <- melt(data)
data$group <- substr(data$variable, 0, 1)
head(data)
dat <- subset(data,data$clade_name = 'Roseburia_inulinivorans')
m1 <- wilcox.test(group ~ value, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE, conf.int=TRUE)
dat <- subset(data,data$clade_name == 'Roseburia_inulinivorans')
m1 <- wilcox.test(group ~ value, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE, conf.int=TRUE)
dat
m1 <- wilcox.test(group ~ value, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE, conf.int=TRUE)
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE, conf.int=TRUE)
m1
?wilcox.test
m1$p.value
m1$p.value
for species in unique(data$clade_name){
for (species in unique(data$clade_name)){
print(species)
}
for (species in unique(data$clade_name)){
print(species)
dat <- subset(data,data$clade_name == species)
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE, conf.int=TRUE)
}
dat <- subset(data,data$clade_name == '"Massiliimalia_timonensis"')
dat
dat <- subset(data,data$clade_name == "Massiliimalia_timonensis")
dat
for (species in unique(data$clade_name)){
print(species)
dat <- subset(data,data$clade_name == species)
if length(unique(dat$value)) > 1{
for (species in unique(data$clade_name)){
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE, conf.int=TRUE)
}
}
raw_pvalue <- numeric(length = length(unique(data$clade_name)))
pvalue <- numeric(length = length(unique(data$clade_name)))
i <- 0
for (species in unique(data$clade_name)){
i <- i + 1
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE)
pvalue[i] <- m1$p.value
}
}
pvalue
stats_df = as.data.frame(unique(data$clade_name))
head(stats_df)
stats_df = data.frame(clade_name = unique(data$clade_name))
stats_df = data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
head(stats_df)
stats_df = data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
stats_df = subset(stats_df,stats_df$pvalue <= 0.05)
head(stats_df)
length(stats_df)
nrow(stats_df)
stats_df = data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
nrow(stats_df)
p.adjust(stats_df$pvalue,method = "BH")
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
stats_df <- subset(stats_df,stats_df$pvalue <= 0.05)
stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
stats_df <- subset(stats_df,stats_df$pvalue <= 0.05)
#stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
head(stats_df)
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
#stats_df <- subset(stats_df,stats_df$pvalue <= 0.05)
stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
head(stats_df)
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
stats_df <- subset(stats_df,stats_df$padj <= 0.05)
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue)
stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
stats_df <- subset(stats_df,stats_df$padj <= 0.05)
nrow(stats_df)
pvalue <- numeric(length = length(unique(data$clade_name)))
lfc <- numeric(length = length(unique(data$clade_name)))
i <- 0
for (species in unique(data$clade_name)){
i <- i + 1
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE)
pvalue[i] <- m1$p.value
}
}
dat
log2(subset(dat,dat$group == 'H')$value)
for (species in unique(data$clade_name)){
i <- i + 1
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE)
pvalue[i] <- m1$p.value
h <- subset(dat,dat$group == 'H')$value
l <- subset(dat,dat$group == 'L')$value
}
}
pvalue <- numeric(length = length(unique(data$clade_name)))
lfc <- numeric(length = length(unique(data$clade_name)))
i <- 0
for (species in unique(data$clade_name)){
i <- i + 1
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE)
pvalue[i] <- m1$p.value
h <- subset(dat,dat$group == 'H')$value
l <- subset(dat,dat$group == 'L')$value
fc <- mean(h) / mean(l)
lfc[i] <- log2(fc)
}
}
lfc
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue,
lfc = lfc)
stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
stats_df <- subset(stats_df,stats_df$padj <= 0.05)
stats_df
subset(data,data$clade_name == 'Prevotella_SGB1615')
head(data)
pvalue <- numeric(length = length(unique(data$clade_name)))
pvalue
pvalue <- numeric(length = length(unique(data$clade_name)))
lfc <- numeric(length = length(unique(data$clade_name)))
pvalue <- numeric()
pvalue
i <- 0
for (species in unique(data$clade_name)){
i <- i + 1
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE)
pvalue[i] <- m1$p.value
h <- subset(dat,dat$group == 'H')$value
l <- subset(dat,dat$group == 'L')$value
fc <- mean(h) / mean(l)
lfc[i] <- log2(fc)
}
}
pvalue
rm(pvalue)
rm(lfc)
data <- read.csv('species_abd.csv')
data <- melt(data)
data$group <- substr(data$variable, 0, 1)
head(data)
rm(lfc)
#pvalue <- numeric(length = length(unique(data$clade_name)))
#lfc <- numeric(length = length(unique(data$clade_name)))
#pvalue <- numeric()
i <- 0
for (species in unique(data$clade_name)){
i <- i + 1
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE)
pvalue[i] <- m1$p.value
h <- subset(dat,dat$group == 'H')$value
l <- subset(dat,dat$group == 'L')$value
fc <- mean(h) / mean(l)
lfc[i] <- log2(fc)
}
}
pvalue <- numeric()
lfc <- numeric()
i <- 0
for (species in unique(data$clade_name)){
i <- i + 1
print(species)
dat <- subset(data,data$clade_name == species)
if (length(unique(dat$value)) > 1) {
m1 <- wilcox.test(value ~ group, data=dat, na.rm=TRUE, paired=FALSE, exact=FALSE)
pvalue[i] <- m1$p.value
h <- subset(dat,dat$group == 'H')$value
l <- subset(dat,dat$group == 'L')$value
fc <- mean(h) / mean(l)
lfc[i] <- log2(fc)
}
}
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue,
lfc = lfc)
stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
stats_df
stats_df <- subset(stats_df,stats_df$padj <= 0.05)
stats_df
library('pheatmap')
install.packages("pheatmap")
library("pheatmap")
head(stats_df)
stats_df$log_pvalue <- -log10(stats_df$pvalue)
head(stats_df)
plot(stats_df$lfc,stats_df$log_pvalue)
stats_df <- data.frame(clade_name = unique(data$clade_name),
pvalue = pvalue,
lfc = lfc)
stats_df$padj <- p.adjust(stats_df$pvalue,method = "BH")
head(stats_df)
stats_df$log_pvalue <- -log10(stats_df$pvalue)
plot(stats_df$lfc,stats_df$log_pvalue)
head(meta)
library("vegan")
head(data)
data <- read.csv('species_abd.csv')
head(data)
diversity(data$HD_10,index = 'shannon')
sapply(data, function(x) diversity(x,index = 'shannon') )
data <- read.csv('species_abd.csv')
rownames(data) <- data$clade_name
data$clade_name <- NULL
sapply(data, function(x) diversity(x,index = 'shannon') )
df <- sapply(data, function(x) diversity(x,index = 'shannon') )
melt(df)
df <- sapply(data, function(x) diversity(x,index = 'shannon') )
df <- melt(df)
df$group <- substr(rownames(df), 0, 1)
df
g <- ggplot(df,aes(x=group,y=value))
g <- geom_boxplot()
g
g <- ggplot(df,aes(x=group,y=value))
g <- g + geom_boxplot()
g
g <- ggplot(df,aes(x=group,y=value))
g <- g + geom_boxplot()
g <- g + stat_compare_means()
g
g <- ggplot(df,aes(x=group,y=value))
g <- g + geom_boxplot()
g <- g + stat_compare_means(method = 't')
g
g <- ggplot(df,aes(x=group,y=value))
g <- g + geom_boxplot()
g <- g + stat_compare_means()
g
varespec.bray <- vegdist(data, method = "bray")
varespec.bray
varespec.bray <- vegdist(t(data), method = "bray")
varespec.bray
pcoaVS <- pco(varespec.bray, negvals = "zero", dround = 0)
library(ecodist)
library("ecodist")
data <- read.csv('species_abd.csv')
rownames(data) <- data$clade_name
data$clade_name <- NULL
diversity(data$HD_10,index = 'shannon')
df <- sapply(data, function(x) diversity(x,index = 'shannon') )
df <- melt(df)
df$group <- substr(rownames(df), 0, 1)
g <- ggplot(df,aes(x=group,y=value))
g <- g + geom_boxplot()
g <- g + stat_compare_means()
g
varespec.bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(varespec.bray, negvals = "zero", dround = 0)
plot(pcoaVS$vectors[,1], pcoaVS$vectors[,2], type = "n", xlab = "PCoA1", ylab = "PCoA2",
axes = TRUE, main = "PCoA (ecodist) on varespec data")
pcoaVS
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- pcoaVS[1:2,]
head(pcoa_df)
pcoaVS$vectors
pcoa_df <- pcoaVS$values
pcoaVS$values
pcoa_df <- length(pcoaVS$values)
length(pcoaVS$values)
pcoa_df <- length(data)
length(data)
data
pcoa_df <- pcoaVS$vectors[1:2,]
head(pcoa_df)
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- pcoaVS$vectors[,1:2]
head(pcoa_df)
nrow(pcoa_df)
heda(df)
head(df)
head(data)
head(t(data))
nrow(t(data))
rownames(pcoa_df) <- rownames(t(data))
head(pcoa_df)
colnames(pcoa_df) <- c('Axis1','Axis2')
head(pcoa_df)
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- pcoaVS$vectors[,1:2]
rownames(pcoa_df) <- rownames(t(data))
colnames(pcoa_df) <- c('Axis1','Axis2')
pcoa_df$group <- substr(rownames(pcoa_df), 0, 1)
head(pcoa_df)
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- pcoaVS$vectors[,1:2]
rownames(pcoa_df) <- rownames(t(data))
colnames(pcoa_df) <- c('Axis1','Axis2')
pcoa_df$group <- substr(rownames(pcoa_df), 0, 1)
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- pcoaVS$vectors[,1:2]
rownames(pcoa_df) <- rownames(t(data))
colnames(pcoa_df) <- c('Axis1','Axis2')
head(pcoa_df)
rownames(pcoa_df)
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- pcoaVS$vectors[,1:2]
rownames(pcoa_df) <- rownames(t(data))
colnames(pcoa_df) <- c('Axis1','Axis2')
pcoa_df$group <- substr(rownames(pcoa_df), 0, 1)
head(pcoa_df)
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- as.data.frame(pcoaVS$vectors[,1:2])
rownames(pcoa_df) <- rownames(t(data))
colnames(pcoa_df) <- c('Axis1','Axis2')
pcoa_df$group <- substr(rownames(pcoa_df), 0, 1)
head(pcoa_df)
g <- ggplot2(data=pcoa_df,aes(x=Axis1,y=Axis2))
g <- g + geom_point()
g
g <- ggplot(data=pcoa_df,aes(x=Axis1,y=Axis2))
g <- g + geom_point()
g
g <- ggplot(data=pcoa_df,aes(x=Axis1,y=Axis2,color=group))
g <- g + geom_point()
g
install.packages("dplyr")
install.packages("dplyr")
library("pheatmap")
library("vegan")
library("ecodist")
data <- read.csv('species_abd.csv')
rownames(data) <- data$clade_name
data$clade_name <- NULL
diversity(data$HD_10,index = 'shannon')
df <- sapply(data, function(x) diversity(x,index = 'shannon') )
data <- read.csv('data/species_abd.csv')
rownames(data) <- data$clade_name
data$clade_name <- NULL
diversity(data$HD_10,index = 'shannon')
df <- sapply(data, function(x) diversity(x,index = 'shannon') )
df <- melt(df)
df$group <- substr(rownames(df), 0, 1)
g <- ggplot(df,aes(x=group,y=value))
g <- g + geom_boxplot()
g <- g + stat_compare_means()
g
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- as.data.frame(pcoaVS$vectors[,1:2])
rownames(pcoa_df) <- rownames(t(data))
colnames(pcoa_df) <- c('Axis1','Axis2')
pcoa_df$group <- substr(rownames(pcoa_df), 0, 1)
g <- ggplot(data=pcoa_df,aes(x=Axis1,y=Axis2,color=group))
g <- g + geom_point()
g
# calculate the diversity for one sample
diversity(data$HD_10,index = 'shannon')
?sapply
# apply this function to all the columns
df <- sapply(data, function(x) diversity(x,index = 'shannon') )
head(df)
# calculate the diversity for one sample
diversity(data$HD_10,index = 'shannon')
df <- melt(df)
head(df)
t(df)
head(df)
# apply this function to all the columns
df <- sapply(data, function(x) diversity(x,index = 'shannon') )
head(df)
bray <- vegdist(t(data), method = "bray")
pcoaVS <- pco(bray, negvals = "zero", dround = 0)
pcoa_df <- as.data.frame(pcoaVS$vectors[,1:2])
rownames(pcoa_df) <- rownames(t(data))
colnames(pcoa_df) <- c('Axis1','Axis2')
pcoa_df$group <- substr(rownames(pcoa_df), 0, 1)
g <- ggplot(data=pcoa_df,aes(x=Axis1,y=Axis2,color=group))
g <- g + geom_point()
g
pcoa_df
# plot the diversity for all samples in a scatter plot
g <- ggplot(data=pcoa_df,aes(x=Axis1,y=Axis2,shape=group))
g <- g + geom_point()
g
# plot the diversity for all samples in a scatter plot
g <- ggplot(data=pcoa_df,aes(x=Axis1,y=Axis2,color=group))
g <- g + geom_point()
g
# read in metadata (do this once)
meta <- read.csv('metadata_parsed.csv',row.names = 'Sample.ID')
# read in metadata (do this once)
meta <- read.csv('data/metadata_parsed.csv',row.names = 'Sample.ID')
# create an additional column for a sample group
meta$group <- substr(rownames(meta), 0, 1)
meta
head(pcoa_df)
df = merge(pcoa_df,meta)
head(df)
head(pcoa_df)
head(meta)
head(pcoa_df)
df = merge(pcoa_df,meta,by='row.names')
head(df)
df = merge(pcoa_df,meta,by=0)
head(df)
df = merge(pcoa_df,meta,by=0)
rownames(df) = df$Row.names
df$Row.names = NULL
head(df)
g <- ggplot(data=df,aes(x=Axis1,y=Axis2,color=Gender))
g <- g + geom_point()
g
install.packages("dplyr")
install.packages("reshape2")
install.packages("tidyverse") # ggplot is part of tidyverse
